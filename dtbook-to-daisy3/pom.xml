<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>scripts-parent</artifactId>
    <version>1.10.2-SNAPSHOT</version>
    <relativePath>../parent/</relativePath>
  </parent>

  <artifactId>dtbook-to-daisy3</artifactId>
  <version>2.1.2-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <name>DAISY Pipeline 2 module :: DTBook to DAISY 3</name>
  
  <properties>
    <jaxp-standalone.version>1.4.2</jaxp-standalone.version>
    <zedval-osgi.version>2.1</zedval-osgi.version>
    <modules-test-helper.version>1.0.0-SNAPSHOT</modules-test-helper.version>
  </properties>
  
  <dependencies>
    <!--
        runtime dependencies
    -->
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>common-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>css-speech</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>css-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>daisy3-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-tts</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>fileset-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>file-utils</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>tts-helpers</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!--
        test dependencies
    -->
    <!--
        Tests are executed in a separate project, but list some of the test dependencies here too so
        that if they are snapshots Maven will put them in the reactor before this project.
    -->
    <dependency>
      <groupId>org.daisy.pipeline</groupId>
      <artifactId>xproc-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.build</groupId>
      <artifactId>modules-test-helper</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>1.8</version>
        <configuration>
          <settingsFile>${basedir}/src/test/resources/settings.xml</settingsFile>
          <localRepositoryPath>${project.build.directory}/test/local-repo</localRepositoryPath>
          <properties>
            <!-- for settings file -->
            <testDependenciesLibUrl>${project.baseUri}/src/test/resources/deps/lib</testDependenciesLibUrl>
          </properties>
        </configuration>
        <executions>
          <!-- build jaxp-standalone and zedval-osgi -->
          <execution>
            <id>build-test-dependencies</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <projectsDirectory>${basedir}/src/test/resources/deps/src</projectsDirectory>
              <cloneProjectsTo>${project.build.directory}/test/deps/src</cloneProjectsTo>
              <pomIncludes>
                <pomInclude>jaxp-standalone</pomInclude>
                <pomInclude>zedval-osgi</pomInclude>
              </pomIncludes>
              <goals>
                <goal>install</goal>
              </goals>
            </configuration>
          </execution>
          <execution>
            <id>install-dtbook-to-daisy3</id>
            <!-- to make sure that by now dtbook-to-daisy3 jar has been built (see
                 "bundle-before-test" execution of maven-bundle-plugin which is bound to
                 generate-test-resources phase) -->
            <phase>process-test-resources</phase>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
          <!-- need to run tests in separate project because generated test dependencies can not be
               added dynamically in Maven -->
          <execution>
            <id>execute-test</id>
            <phase>test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <projectsDirectory>${basedir}/src/test/resources</projectsDirectory>
              <cloneProjectsTo>${project.build.directory}/test</cloneProjectsTo>
              <properties>
                <localRepositoryPath>${project.build.directory}/test/local-repo</localRepositoryPath>
                <dtbook-to-daisy3.version>${project.version}</dtbook-to-daisy3.version>
                <jaxp-standalone.version>${jaxp-standalone.version}</jaxp-standalone.version>
                <zedval-osgi.version>${zedval-osgi.version}</zedval-osgi.version>
                <modules-test-helper.version>${modules-test-helper.version}</modules-test-helper.version>
              </properties>
              <pomIncludes>
                <pomInclude>test</pomInclude>
              </pomIncludes>
              <goals>
                <goal>test</goal>
              </goals>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>default-testResources</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
